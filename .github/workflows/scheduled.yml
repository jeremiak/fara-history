name: Fetch latest data, commit, then build and deploy with Datasette

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0,12 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Check out repo
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Fetch, update and commit FARA data
      run: . update_and_commit_all.sh
    - name: Build fara.db database
      run: python build_database.py
    - name: Set variables to decide if we should deploy
      id: decide_variables
      run: |-
        echo "##[set-output name=latest;]$(datasette inspect fara.db | jq '.fara.hash' -r)"
        echo "##[set-output name=deployed;]$(curl -s https://fara.datasettes.com/-/databases.json | jq '.[0].hash' -r)"
    - name: Set up Cloud Run
      if: github.event_name == 'workflow_dispatch' || steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
      uses: google-github-actions/setup-gcloud@v0
      with:
        version: '275.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Deploy to Cloud Run
      if: github.event_name == 'workflow_dispatch' || steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
      run: |-
        gcloud components install beta
        gcloud config set run/region us-central1
        gcloud config set project datasette-222320
        datasette publish cloudrun fara.db \
            --service fara-history \
            -m metadata.json \
            --install datasette-json-html \
            --install datasette-atom \
            --install datasette-graphql \
            --install datasette-search-all
